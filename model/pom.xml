<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>sakila</artifactId>
        <groupId>com.badri</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>model</artifactId>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
            <version>2.2.6.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>7.2.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- flywaway to manage db migrations-->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>7.2.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <baselineOnMigrate>true</baselineOnMigrate>
                    <driver>org.postgresql.Driver</driver>
                    <url>jdbc:postgresql:sakila_db</url>
                    <user>sakila</user>
                    <password>password</password>
                    <locations>
                        <location>filesystem:src/main/resources/migration/v2</location>
                    </locations>
                    <placeholders>
                        <schema>public</schema>
                    </placeholders>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.4.1212</version>
                    </dependency>
                </dependencies>
            </plugin>


            <plugin>

                <!-- Specify the maven code generator plugin -->
                <!-- Use org.jooq              for the Open Source edition
                         org.jooq.pro          for commercial editions,
                         org.jooq.pro-java-8   for commercial editions with Java 8 support,
                         org.jooq.pro-java-6   for commercial editions with Java 6 support,
                         org.jooq.trial        for the free trial edition,
                         org.jooq.trial-java-8 for the free trial edition with Java 8 support,
                         org.jooq.trial-java-6 for the free trial edition with Java 6 support

                     Note: Only the Open Source Edition is hosted on Maven Central.
                           Import the others manually from your distribution -->
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.13.6</version>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.4.1212</version>
                    </dependency>
                </dependencies>

                <!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
                <configuration>

                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>jdbc:postgresql:sakila_db</url>
                        <user>sakila</user>
                        <password>password</password>
                    </jdbc>

                    <!-- Generator parameters -->
                    <generator>
                        <database>
                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <excludes></excludes>
                            <!-- In case your database supports catalogs, e.g. SQL Server:
                            <inputCatalog>public</inputCatalog>
                              -->
                            <inputSchema>public</inputSchema>
                            <outputSchemaToDefault>true</outputSchemaToDefault>
                        </database>
                        <generate>
                            <jpaAnnotations>false</jpaAnnotations>
                            <pojos>false</pojos>
                            <records>true</records>
                            <fluentSetters>false</fluentSetters>
                        </generate>
                        <target>
                            <packageName>com.badri.sakila.model.jooq.generated</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>